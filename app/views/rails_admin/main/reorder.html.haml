:ruby
  properties = @model_config.list.with(:controller => self.controller, :view => self, :object => @abstract_model.model.new).visible_fields

/ mimic the list view from rails_admin
/ manually adding the row for sort.
/ hence, model_config.list for properties

= form_tag reorder_path(:model_name => @abstract_model.to_param), :method => :post, :id => "reorder_model_form", :class => "form" do
  = hidden_field_tag :ajax, false, :id => 'reorder_model_form_ajax'
  %table.table.table-condensed.table-striped
    %thead
      %tr
        %th.sort-header Sort
        - properties.each do |property|
          %th{:class => "#{property.css_class} #{property.type_css_class}", :rel => "tooltip", :title => "#{property.hint}"}= property.label
    %tbody.table-reorderable
      - @items.each do |item|
        %tr
          %td.sort-division
            = select_tag "item[#{item.id}]", options_for_select((-1 * @items.length)..@items.length, item.sort), :include_blank => false, :id => "sort-#{item.id}", :class => 'sort'
          - properties.map{ |property| property.bind(:object, item) }.each do |property|
            - value = property.pretty_value
            %td{:class => "#{property.css_class} #{property.type_css_class}", :title => strip_tags(value)}= value
  = submit_tag "Reorder", :id => 'reorder_model_form_submit'
  
  = javascript_include_tag 'rails_admin/ra.model_reorderable.js'